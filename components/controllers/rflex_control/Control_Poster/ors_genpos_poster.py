# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_ors_genpos_poster', [dirname(__file__)])
        except ImportError:
            import _ors_genpos_poster
            return _ors_genpos_poster
        if fp is not None:
            try:
                _mod = imp.load_module('_ors_genpos_poster', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _ors_genpos_poster = swig_import_helper()
    del swig_import_helper
else:
    import _ors_genpos_poster
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0



def locate_poster(*args):
  return _ors_genpos_poster.locate_poster(*args)
locate_poster = _ors_genpos_poster.locate_poster

def read_genPos_data(*args):
  return _ors_genpos_poster.read_genPos_data(*args)
read_genPos_data = _ors_genpos_poster.read_genPos_data

def finalize(*args):
  return _ors_genpos_poster.finalize(*args)
finalize = _ors_genpos_poster.finalize
GENPOS_MAX_POSTER_NAME = _ors_genpos_poster.GENPOS_MAX_POSTER_NAME
GENPOS_MAX_TRAJECTORY_SIZE = _ors_genpos_poster.GENPOS_MAX_TRAJECTORY_SIZE
class GENPOS_POSTER_NAME(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GENPOS_POSTER_NAME, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GENPOS_POSTER_NAME, name)
    __repr__ = _swig_repr
    __swig_setmethods__["name"] = _ors_genpos_poster.GENPOS_POSTER_NAME_name_set
    __swig_getmethods__["name"] = _ors_genpos_poster.GENPOS_POSTER_NAME_name_get
    if _newclass:name = _swig_property(_ors_genpos_poster.GENPOS_POSTER_NAME_name_get, _ors_genpos_poster.GENPOS_POSTER_NAME_name_set)
    def __init__(self): 
        this = _ors_genpos_poster.new_GENPOS_POSTER_NAME()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ors_genpos_poster.delete_GENPOS_POSTER_NAME
    __del__ = lambda self : None;
GENPOS_POSTER_NAME_swigregister = _ors_genpos_poster.GENPOS_POSTER_NAME_swigregister
GENPOS_POSTER_NAME_swigregister(GENPOS_POSTER_NAME)

class GENPOS_CART_STATE(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GENPOS_CART_STATE, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GENPOS_CART_STATE, name)
    __repr__ = _swig_repr
    __swig_setmethods__["xRef"] = _ors_genpos_poster.GENPOS_CART_STATE_xRef_set
    __swig_getmethods__["xRef"] = _ors_genpos_poster.GENPOS_CART_STATE_xRef_get
    if _newclass:xRef = _swig_property(_ors_genpos_poster.GENPOS_CART_STATE_xRef_get, _ors_genpos_poster.GENPOS_CART_STATE_xRef_set)
    __swig_setmethods__["yRef"] = _ors_genpos_poster.GENPOS_CART_STATE_yRef_set
    __swig_getmethods__["yRef"] = _ors_genpos_poster.GENPOS_CART_STATE_yRef_get
    if _newclass:yRef = _swig_property(_ors_genpos_poster.GENPOS_CART_STATE_yRef_get, _ors_genpos_poster.GENPOS_CART_STATE_yRef_set)
    __swig_setmethods__["xRob"] = _ors_genpos_poster.GENPOS_CART_STATE_xRob_set
    __swig_getmethods__["xRob"] = _ors_genpos_poster.GENPOS_CART_STATE_xRob_get
    if _newclass:xRob = _swig_property(_ors_genpos_poster.GENPOS_CART_STATE_xRob_get, _ors_genpos_poster.GENPOS_CART_STATE_xRob_set)
    __swig_setmethods__["yRob"] = _ors_genpos_poster.GENPOS_CART_STATE_yRob_set
    __swig_getmethods__["yRob"] = _ors_genpos_poster.GENPOS_CART_STATE_yRob_get
    if _newclass:yRob = _swig_property(_ors_genpos_poster.GENPOS_CART_STATE_yRob_get, _ors_genpos_poster.GENPOS_CART_STATE_yRob_set)
    __swig_setmethods__["theta"] = _ors_genpos_poster.GENPOS_CART_STATE_theta_set
    __swig_getmethods__["theta"] = _ors_genpos_poster.GENPOS_CART_STATE_theta_get
    if _newclass:theta = _swig_property(_ors_genpos_poster.GENPOS_CART_STATE_theta_get, _ors_genpos_poster.GENPOS_CART_STATE_theta_set)
    __swig_setmethods__["v"] = _ors_genpos_poster.GENPOS_CART_STATE_v_set
    __swig_getmethods__["v"] = _ors_genpos_poster.GENPOS_CART_STATE_v_get
    if _newclass:v = _swig_property(_ors_genpos_poster.GENPOS_CART_STATE_v_get, _ors_genpos_poster.GENPOS_CART_STATE_v_set)
    __swig_setmethods__["vt"] = _ors_genpos_poster.GENPOS_CART_STATE_vt_set
    __swig_getmethods__["vt"] = _ors_genpos_poster.GENPOS_CART_STATE_vt_get
    if _newclass:vt = _swig_property(_ors_genpos_poster.GENPOS_CART_STATE_vt_get, _ors_genpos_poster.GENPOS_CART_STATE_vt_set)
    __swig_setmethods__["w"] = _ors_genpos_poster.GENPOS_CART_STATE_w_set
    __swig_getmethods__["w"] = _ors_genpos_poster.GENPOS_CART_STATE_w_get
    if _newclass:w = _swig_property(_ors_genpos_poster.GENPOS_CART_STATE_w_get, _ors_genpos_poster.GENPOS_CART_STATE_w_set)
    def __init__(self): 
        this = _ors_genpos_poster.new_GENPOS_CART_STATE()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ors_genpos_poster.delete_GENPOS_CART_STATE
    __del__ = lambda self : None;
GENPOS_CART_STATE_swigregister = _ors_genpos_poster.GENPOS_CART_STATE_swigregister
GENPOS_CART_STATE_swigregister(GENPOS_CART_STATE)

class GENPOS_CART_CONFIG(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GENPOS_CART_CONFIG, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GENPOS_CART_CONFIG, name)
    __repr__ = _swig_repr
    __swig_setmethods__["x"] = _ors_genpos_poster.GENPOS_CART_CONFIG_x_set
    __swig_getmethods__["x"] = _ors_genpos_poster.GENPOS_CART_CONFIG_x_get
    if _newclass:x = _swig_property(_ors_genpos_poster.GENPOS_CART_CONFIG_x_get, _ors_genpos_poster.GENPOS_CART_CONFIG_x_set)
    __swig_setmethods__["y"] = _ors_genpos_poster.GENPOS_CART_CONFIG_y_set
    __swig_getmethods__["y"] = _ors_genpos_poster.GENPOS_CART_CONFIG_y_get
    if _newclass:y = _swig_property(_ors_genpos_poster.GENPOS_CART_CONFIG_y_get, _ors_genpos_poster.GENPOS_CART_CONFIG_y_set)
    __swig_setmethods__["theta"] = _ors_genpos_poster.GENPOS_CART_CONFIG_theta_set
    __swig_getmethods__["theta"] = _ors_genpos_poster.GENPOS_CART_CONFIG_theta_get
    if _newclass:theta = _swig_property(_ors_genpos_poster.GENPOS_CART_CONFIG_theta_get, _ors_genpos_poster.GENPOS_CART_CONFIG_theta_set)
    def __init__(self): 
        this = _ors_genpos_poster.new_GENPOS_CART_CONFIG()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ors_genpos_poster.delete_GENPOS_CART_CONFIG
    __del__ = lambda self : None;
GENPOS_CART_CONFIG_swigregister = _ors_genpos_poster.GENPOS_CART_CONFIG_swigregister
GENPOS_CART_CONFIG_swigregister(GENPOS_CART_CONFIG)

class GENPOS_CART_CONFIG_VAR(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GENPOS_CART_CONFIG_VAR, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GENPOS_CART_CONFIG_VAR, name)
    __repr__ = _swig_repr
    __swig_setmethods__["var"] = _ors_genpos_poster.GENPOS_CART_CONFIG_VAR_var_set
    __swig_getmethods__["var"] = _ors_genpos_poster.GENPOS_CART_CONFIG_VAR_var_get
    if _newclass:var = _swig_property(_ors_genpos_poster.GENPOS_CART_CONFIG_VAR_var_get, _ors_genpos_poster.GENPOS_CART_CONFIG_VAR_var_set)
    def __init__(self): 
        this = _ors_genpos_poster.new_GENPOS_CART_CONFIG_VAR()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ors_genpos_poster.delete_GENPOS_CART_CONFIG_VAR
    __del__ = lambda self : None;
GENPOS_CART_CONFIG_VAR_swigregister = _ors_genpos_poster.GENPOS_CART_CONFIG_VAR_swigregister
GENPOS_CART_CONFIG_VAR_swigregister(GENPOS_CART_CONFIG_VAR)

GENPOS_FORWARD_MOTION = _ors_genpos_poster.GENPOS_FORWARD_MOTION
GENPOS_BACKWARD_MOTION = _ors_genpos_poster.GENPOS_BACKWARD_MOTION
GENPOS_POS_DATA = _ors_genpos_poster.GENPOS_POS_DATA
GENPOS_SPEED_DATA = _ors_genpos_poster.GENPOS_SPEED_DATA
GENPOS_POS_AND_SPEED_DATA = _ors_genpos_poster.GENPOS_POS_AND_SPEED_DATA
class GENPOS_CART_REF(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GENPOS_CART_REF, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GENPOS_CART_REF, name)
    __repr__ = _swig_repr
    __swig_setmethods__["numRef"] = _ors_genpos_poster.GENPOS_CART_REF_numRef_set
    __swig_getmethods__["numRef"] = _ors_genpos_poster.GENPOS_CART_REF_numRef_get
    if _newclass:numRef = _swig_property(_ors_genpos_poster.GENPOS_CART_REF_numRef_get, _ors_genpos_poster.GENPOS_CART_REF_numRef_set)
    __swig_setmethods__["tickPeriod"] = _ors_genpos_poster.GENPOS_CART_REF_tickPeriod_set
    __swig_getmethods__["tickPeriod"] = _ors_genpos_poster.GENPOS_CART_REF_tickPeriod_get
    if _newclass:tickPeriod = _swig_property(_ors_genpos_poster.GENPOS_CART_REF_tickPeriod_get, _ors_genpos_poster.GENPOS_CART_REF_tickPeriod_set)
    __swig_setmethods__["dataType"] = _ors_genpos_poster.GENPOS_CART_REF_dataType_set
    __swig_getmethods__["dataType"] = _ors_genpos_poster.GENPOS_CART_REF_dataType_get
    if _newclass:dataType = _swig_property(_ors_genpos_poster.GENPOS_CART_REF_dataType_get, _ors_genpos_poster.GENPOS_CART_REF_dataType_set)
    __swig_setmethods__["backFlag"] = _ors_genpos_poster.GENPOS_CART_REF_backFlag_set
    __swig_getmethods__["backFlag"] = _ors_genpos_poster.GENPOS_CART_REF_backFlag_get
    if _newclass:backFlag = _swig_property(_ors_genpos_poster.GENPOS_CART_REF_backFlag_get, _ors_genpos_poster.GENPOS_CART_REF_backFlag_set)
    __swig_setmethods__["x"] = _ors_genpos_poster.GENPOS_CART_REF_x_set
    __swig_getmethods__["x"] = _ors_genpos_poster.GENPOS_CART_REF_x_get
    if _newclass:x = _swig_property(_ors_genpos_poster.GENPOS_CART_REF_x_get, _ors_genpos_poster.GENPOS_CART_REF_x_set)
    __swig_setmethods__["y"] = _ors_genpos_poster.GENPOS_CART_REF_y_set
    __swig_getmethods__["y"] = _ors_genpos_poster.GENPOS_CART_REF_y_get
    if _newclass:y = _swig_property(_ors_genpos_poster.GENPOS_CART_REF_y_get, _ors_genpos_poster.GENPOS_CART_REF_y_set)
    __swig_setmethods__["theta"] = _ors_genpos_poster.GENPOS_CART_REF_theta_set
    __swig_getmethods__["theta"] = _ors_genpos_poster.GENPOS_CART_REF_theta_get
    if _newclass:theta = _swig_property(_ors_genpos_poster.GENPOS_CART_REF_theta_get, _ors_genpos_poster.GENPOS_CART_REF_theta_set)
    __swig_setmethods__["v"] = _ors_genpos_poster.GENPOS_CART_REF_v_set
    __swig_getmethods__["v"] = _ors_genpos_poster.GENPOS_CART_REF_v_get
    if _newclass:v = _swig_property(_ors_genpos_poster.GENPOS_CART_REF_v_get, _ors_genpos_poster.GENPOS_CART_REF_v_set)
    __swig_setmethods__["vt"] = _ors_genpos_poster.GENPOS_CART_REF_vt_set
    __swig_getmethods__["vt"] = _ors_genpos_poster.GENPOS_CART_REF_vt_get
    if _newclass:vt = _swig_property(_ors_genpos_poster.GENPOS_CART_REF_vt_get, _ors_genpos_poster.GENPOS_CART_REF_vt_set)
    __swig_setmethods__["w"] = _ors_genpos_poster.GENPOS_CART_REF_w_set
    __swig_getmethods__["w"] = _ors_genpos_poster.GENPOS_CART_REF_w_get
    if _newclass:w = _swig_property(_ors_genpos_poster.GENPOS_CART_REF_w_get, _ors_genpos_poster.GENPOS_CART_REF_w_set)
    __swig_setmethods__["vmax"] = _ors_genpos_poster.GENPOS_CART_REF_vmax_set
    __swig_getmethods__["vmax"] = _ors_genpos_poster.GENPOS_CART_REF_vmax_get
    if _newclass:vmax = _swig_property(_ors_genpos_poster.GENPOS_CART_REF_vmax_get, _ors_genpos_poster.GENPOS_CART_REF_vmax_set)
    __swig_setmethods__["wmax"] = _ors_genpos_poster.GENPOS_CART_REF_wmax_set
    __swig_getmethods__["wmax"] = _ors_genpos_poster.GENPOS_CART_REF_wmax_get
    if _newclass:wmax = _swig_property(_ors_genpos_poster.GENPOS_CART_REF_wmax_get, _ors_genpos_poster.GENPOS_CART_REF_wmax_set)
    __swig_setmethods__["linAccelMax"] = _ors_genpos_poster.GENPOS_CART_REF_linAccelMax_set
    __swig_getmethods__["linAccelMax"] = _ors_genpos_poster.GENPOS_CART_REF_linAccelMax_get
    if _newclass:linAccelMax = _swig_property(_ors_genpos_poster.GENPOS_CART_REF_linAccelMax_get, _ors_genpos_poster.GENPOS_CART_REF_linAccelMax_set)
    __swig_setmethods__["angAccelMax"] = _ors_genpos_poster.GENPOS_CART_REF_angAccelMax_set
    __swig_getmethods__["angAccelMax"] = _ors_genpos_poster.GENPOS_CART_REF_angAccelMax_get
    if _newclass:angAccelMax = _swig_property(_ors_genpos_poster.GENPOS_CART_REF_angAccelMax_get, _ors_genpos_poster.GENPOS_CART_REF_angAccelMax_set)
    def __init__(self): 
        this = _ors_genpos_poster.new_GENPOS_CART_REF()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ors_genpos_poster.delete_GENPOS_CART_REF
    __del__ = lambda self : None;
GENPOS_CART_REF_swigregister = _ors_genpos_poster.GENPOS_CART_REF_swigregister
GENPOS_CART_REF_swigregister(GENPOS_CART_REF)

class GENPOS_CART_SPEED(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GENPOS_CART_SPEED, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GENPOS_CART_SPEED, name)
    __repr__ = _swig_repr
    __swig_setmethods__["numRef"] = _ors_genpos_poster.GENPOS_CART_SPEED_numRef_set
    __swig_getmethods__["numRef"] = _ors_genpos_poster.GENPOS_CART_SPEED_numRef_get
    if _newclass:numRef = _swig_property(_ors_genpos_poster.GENPOS_CART_SPEED_numRef_get, _ors_genpos_poster.GENPOS_CART_SPEED_numRef_set)
    __swig_setmethods__["updatePeriod"] = _ors_genpos_poster.GENPOS_CART_SPEED_updatePeriod_set
    __swig_getmethods__["updatePeriod"] = _ors_genpos_poster.GENPOS_CART_SPEED_updatePeriod_get
    if _newclass:updatePeriod = _swig_property(_ors_genpos_poster.GENPOS_CART_SPEED_updatePeriod_get, _ors_genpos_poster.GENPOS_CART_SPEED_updatePeriod_set)
    __swig_setmethods__["v"] = _ors_genpos_poster.GENPOS_CART_SPEED_v_set
    __swig_getmethods__["v"] = _ors_genpos_poster.GENPOS_CART_SPEED_v_get
    if _newclass:v = _swig_property(_ors_genpos_poster.GENPOS_CART_SPEED_v_get, _ors_genpos_poster.GENPOS_CART_SPEED_v_set)
    __swig_setmethods__["vt"] = _ors_genpos_poster.GENPOS_CART_SPEED_vt_set
    __swig_getmethods__["vt"] = _ors_genpos_poster.GENPOS_CART_SPEED_vt_get
    if _newclass:vt = _swig_property(_ors_genpos_poster.GENPOS_CART_SPEED_vt_get, _ors_genpos_poster.GENPOS_CART_SPEED_vt_set)
    __swig_setmethods__["w"] = _ors_genpos_poster.GENPOS_CART_SPEED_w_set
    __swig_getmethods__["w"] = _ors_genpos_poster.GENPOS_CART_SPEED_w_get
    if _newclass:w = _swig_property(_ors_genpos_poster.GENPOS_CART_SPEED_w_get, _ors_genpos_poster.GENPOS_CART_SPEED_w_set)
    __swig_setmethods__["vmax"] = _ors_genpos_poster.GENPOS_CART_SPEED_vmax_set
    __swig_getmethods__["vmax"] = _ors_genpos_poster.GENPOS_CART_SPEED_vmax_get
    if _newclass:vmax = _swig_property(_ors_genpos_poster.GENPOS_CART_SPEED_vmax_get, _ors_genpos_poster.GENPOS_CART_SPEED_vmax_set)
    __swig_setmethods__["wmax"] = _ors_genpos_poster.GENPOS_CART_SPEED_wmax_set
    __swig_getmethods__["wmax"] = _ors_genpos_poster.GENPOS_CART_SPEED_wmax_get
    if _newclass:wmax = _swig_property(_ors_genpos_poster.GENPOS_CART_SPEED_wmax_get, _ors_genpos_poster.GENPOS_CART_SPEED_wmax_set)
    __swig_setmethods__["linAccelMax"] = _ors_genpos_poster.GENPOS_CART_SPEED_linAccelMax_set
    __swig_getmethods__["linAccelMax"] = _ors_genpos_poster.GENPOS_CART_SPEED_linAccelMax_get
    if _newclass:linAccelMax = _swig_property(_ors_genpos_poster.GENPOS_CART_SPEED_linAccelMax_get, _ors_genpos_poster.GENPOS_CART_SPEED_linAccelMax_set)
    __swig_setmethods__["angAccelMax"] = _ors_genpos_poster.GENPOS_CART_SPEED_angAccelMax_set
    __swig_getmethods__["angAccelMax"] = _ors_genpos_poster.GENPOS_CART_SPEED_angAccelMax_get
    if _newclass:angAccelMax = _swig_property(_ors_genpos_poster.GENPOS_CART_SPEED_angAccelMax_get, _ors_genpos_poster.GENPOS_CART_SPEED_angAccelMax_set)
    def __init__(self): 
        this = _ors_genpos_poster.new_GENPOS_CART_SPEED()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ors_genpos_poster.delete_GENPOS_CART_SPEED
    __del__ = lambda self : None;
GENPOS_CART_SPEED_swigregister = _ors_genpos_poster.GENPOS_CART_SPEED_swigregister
GENPOS_CART_SPEED_swigregister(GENPOS_CART_SPEED)

class GENPOS_CART_CMD_PARAM(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GENPOS_CART_CMD_PARAM, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GENPOS_CART_CMD_PARAM, name)
    __repr__ = _swig_repr
    __swig_setmethods__["distPoint"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_distPoint_set
    __swig_getmethods__["distPoint"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_distPoint_get
    if _newclass:distPoint = _swig_property(_ors_genpos_poster.GENPOS_CART_CMD_PARAM_distPoint_get, _ors_genpos_poster.GENPOS_CART_CMD_PARAM_distPoint_set)
    __swig_setmethods__["KpLongit"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_KpLongit_set
    __swig_getmethods__["KpLongit"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_KpLongit_get
    if _newclass:KpLongit = _swig_property(_ors_genpos_poster.GENPOS_CART_CMD_PARAM_KpLongit_get, _ors_genpos_poster.GENPOS_CART_CMD_PARAM_KpLongit_set)
    __swig_setmethods__["KiLongit"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_KiLongit_set
    __swig_getmethods__["KiLongit"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_KiLongit_get
    if _newclass:KiLongit = _swig_property(_ors_genpos_poster.GENPOS_CART_CMD_PARAM_KiLongit_get, _ors_genpos_poster.GENPOS_CART_CMD_PARAM_KiLongit_set)
    __swig_setmethods__["KpTransv"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_KpTransv_set
    __swig_getmethods__["KpTransv"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_KpTransv_get
    if _newclass:KpTransv = _swig_property(_ors_genpos_poster.GENPOS_CART_CMD_PARAM_KpTransv_get, _ors_genpos_poster.GENPOS_CART_CMD_PARAM_KpTransv_set)
    __swig_setmethods__["KiTransv"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_KiTransv_set
    __swig_getmethods__["KiTransv"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_KiTransv_get
    if _newclass:KiTransv = _swig_property(_ors_genpos_poster.GENPOS_CART_CMD_PARAM_KiTransv_get, _ors_genpos_poster.GENPOS_CART_CMD_PARAM_KiTransv_set)
    __swig_setmethods__["KpAng"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_KpAng_set
    __swig_getmethods__["KpAng"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_KpAng_get
    if _newclass:KpAng = _swig_property(_ors_genpos_poster.GENPOS_CART_CMD_PARAM_KpAng_get, _ors_genpos_poster.GENPOS_CART_CMD_PARAM_KpAng_set)
    __swig_setmethods__["KiAng"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_KiAng_set
    __swig_getmethods__["KiAng"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_KiAng_get
    if _newclass:KiAng = _swig_property(_ors_genpos_poster.GENPOS_CART_CMD_PARAM_KiAng_get, _ors_genpos_poster.GENPOS_CART_CMD_PARAM_KiAng_set)
    __swig_setmethods__["longitErrorMax"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_longitErrorMax_set
    __swig_getmethods__["longitErrorMax"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_longitErrorMax_get
    if _newclass:longitErrorMax = _swig_property(_ors_genpos_poster.GENPOS_CART_CMD_PARAM_longitErrorMax_get, _ors_genpos_poster.GENPOS_CART_CMD_PARAM_longitErrorMax_set)
    __swig_setmethods__["transvErrorMax"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_transvErrorMax_set
    __swig_getmethods__["transvErrorMax"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_transvErrorMax_get
    if _newclass:transvErrorMax = _swig_property(_ors_genpos_poster.GENPOS_CART_CMD_PARAM_transvErrorMax_get, _ors_genpos_poster.GENPOS_CART_CMD_PARAM_transvErrorMax_set)
    __swig_setmethods__["longitMaxErrSum"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_longitMaxErrSum_set
    __swig_getmethods__["longitMaxErrSum"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_longitMaxErrSum_get
    if _newclass:longitMaxErrSum = _swig_property(_ors_genpos_poster.GENPOS_CART_CMD_PARAM_longitMaxErrSum_get, _ors_genpos_poster.GENPOS_CART_CMD_PARAM_longitMaxErrSum_set)
    __swig_setmethods__["transvMaxErrSum"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_transvMaxErrSum_set
    __swig_getmethods__["transvMaxErrSum"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_transvMaxErrSum_get
    if _newclass:transvMaxErrSum = _swig_property(_ors_genpos_poster.GENPOS_CART_CMD_PARAM_transvMaxErrSum_get, _ors_genpos_poster.GENPOS_CART_CMD_PARAM_transvMaxErrSum_set)
    __swig_setmethods__["angErrorMax"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_angErrorMax_set
    __swig_getmethods__["angErrorMax"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_angErrorMax_get
    if _newclass:angErrorMax = _swig_property(_ors_genpos_poster.GENPOS_CART_CMD_PARAM_angErrorMax_get, _ors_genpos_poster.GENPOS_CART_CMD_PARAM_angErrorMax_set)
    __swig_setmethods__["angMaxErrSum"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_angMaxErrSum_set
    __swig_getmethods__["angMaxErrSum"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_angMaxErrSum_get
    if _newclass:angMaxErrSum = _swig_property(_ors_genpos_poster.GENPOS_CART_CMD_PARAM_angMaxErrSum_get, _ors_genpos_poster.GENPOS_CART_CMD_PARAM_angMaxErrSum_set)
    __swig_setmethods__["longitMaxGap"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_longitMaxGap_set
    __swig_getmethods__["longitMaxGap"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_longitMaxGap_get
    if _newclass:longitMaxGap = _swig_property(_ors_genpos_poster.GENPOS_CART_CMD_PARAM_longitMaxGap_get, _ors_genpos_poster.GENPOS_CART_CMD_PARAM_longitMaxGap_set)
    __swig_setmethods__["transvMaxGap"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_transvMaxGap_set
    __swig_getmethods__["transvMaxGap"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_transvMaxGap_get
    if _newclass:transvMaxGap = _swig_property(_ors_genpos_poster.GENPOS_CART_CMD_PARAM_transvMaxGap_get, _ors_genpos_poster.GENPOS_CART_CMD_PARAM_transvMaxGap_set)
    __swig_setmethods__["angMaxGap"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_angMaxGap_set
    __swig_getmethods__["angMaxGap"] = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_angMaxGap_get
    if _newclass:angMaxGap = _swig_property(_ors_genpos_poster.GENPOS_CART_CMD_PARAM_angMaxGap_get, _ors_genpos_poster.GENPOS_CART_CMD_PARAM_angMaxGap_set)
    def __init__(self): 
        this = _ors_genpos_poster.new_GENPOS_CART_CMD_PARAM()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ors_genpos_poster.delete_GENPOS_CART_CMD_PARAM
    __del__ = lambda self : None;
GENPOS_CART_CMD_PARAM_swigregister = _ors_genpos_poster.GENPOS_CART_CMD_PARAM_swigregister
GENPOS_CART_CMD_PARAM_swigregister(GENPOS_CART_CMD_PARAM)

class GENPOS_CART_CMD_SPEED_PARAM(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GENPOS_CART_CMD_SPEED_PARAM, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GENPOS_CART_CMD_SPEED_PARAM, name)
    __repr__ = _swig_repr
    __swig_setmethods__["Kp"] = _ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_Kp_set
    __swig_getmethods__["Kp"] = _ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_Kp_get
    if _newclass:Kp = _swig_property(_ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_Kp_get, _ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_Kp_set)
    __swig_setmethods__["Ki"] = _ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_Ki_set
    __swig_getmethods__["Ki"] = _ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_Ki_get
    if _newclass:Ki = _swig_property(_ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_Ki_get, _ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_Ki_set)
    __swig_setmethods__["Kd"] = _ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_Kd_set
    __swig_getmethods__["Kd"] = _ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_Kd_get
    if _newclass:Kd = _swig_property(_ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_Kd_get, _ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_Kd_set)
    __swig_setmethods__["Kff"] = _ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_Kff_set
    __swig_getmethods__["Kff"] = _ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_Kff_get
    if _newclass:Kff = _swig_property(_ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_Kff_get, _ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_Kff_set)
    __swig_setmethods__["maxErrorResetInt"] = _ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_maxErrorResetInt_set
    __swig_getmethods__["maxErrorResetInt"] = _ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_maxErrorResetInt_get
    if _newclass:maxErrorResetInt = _swig_property(_ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_maxErrorResetInt_get, _ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_maxErrorResetInt_set)
    __swig_setmethods__["maxErrorSum"] = _ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_maxErrorSum_set
    __swig_getmethods__["maxErrorSum"] = _ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_maxErrorSum_get
    if _newclass:maxErrorSum = _swig_property(_ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_maxErrorSum_get, _ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_maxErrorSum_set)
    def __init__(self): 
        this = _ors_genpos_poster.new_GENPOS_CART_CMD_SPEED_PARAM()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ors_genpos_poster.delete_GENPOS_CART_CMD_SPEED_PARAM
    __del__ = lambda self : None;
GENPOS_CART_CMD_SPEED_PARAM_swigregister = _ors_genpos_poster.GENPOS_CART_CMD_SPEED_PARAM_swigregister
GENPOS_CART_CMD_SPEED_PARAM_swigregister(GENPOS_CART_CMD_SPEED_PARAM)

GENPOS_NO_TRACKING = _ors_genpos_poster.GENPOS_NO_TRACKING
GENPOS_TRACK_POS = _ors_genpos_poster.GENPOS_TRACK_POS
GENPOS_TRACK_CONFIG = _ors_genpos_poster.GENPOS_TRACK_CONFIG
GENPOS_TRACK_SPEED = _ors_genpos_poster.GENPOS_TRACK_SPEED
GENPOS_TRACK_TRAILER = _ors_genpos_poster.GENPOS_TRACK_TRAILER
class GENPOS_TRAJ_POINTS(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GENPOS_TRAJ_POINTS, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GENPOS_TRAJ_POINTS, name)
    __repr__ = _swig_repr
    __swig_setmethods__["numRef"] = _ors_genpos_poster.GENPOS_TRAJ_POINTS_numRef_set
    __swig_getmethods__["numRef"] = _ors_genpos_poster.GENPOS_TRAJ_POINTS_numRef_get
    if _newclass:numRef = _swig_property(_ors_genpos_poster.GENPOS_TRAJ_POINTS_numRef_get, _ors_genpos_poster.GENPOS_TRAJ_POINTS_numRef_set)
    __swig_setmethods__["nbPts"] = _ors_genpos_poster.GENPOS_TRAJ_POINTS_nbPts_set
    __swig_getmethods__["nbPts"] = _ors_genpos_poster.GENPOS_TRAJ_POINTS_nbPts_get
    if _newclass:nbPts = _swig_property(_ors_genpos_poster.GENPOS_TRAJ_POINTS_nbPts_get, _ors_genpos_poster.GENPOS_TRAJ_POINTS_nbPts_set)
    __swig_setmethods__["points"] = _ors_genpos_poster.GENPOS_TRAJ_POINTS_points_set
    __swig_getmethods__["points"] = _ors_genpos_poster.GENPOS_TRAJ_POINTS_points_get
    if _newclass:points = _swig_property(_ors_genpos_poster.GENPOS_TRAJ_POINTS_points_get, _ors_genpos_poster.GENPOS_TRAJ_POINTS_points_set)
    def __init__(self): 
        this = _ors_genpos_poster.new_GENPOS_TRAJ_POINTS()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ors_genpos_poster.delete_GENPOS_TRAJ_POINTS
    __del__ = lambda self : None;
GENPOS_TRAJ_POINTS_swigregister = _ors_genpos_poster.GENPOS_TRAJ_POINTS_swigregister
GENPOS_TRAJ_POINTS_swigregister(GENPOS_TRAJ_POINTS)

GENPOS_NO_TRAILER = _ors_genpos_poster.GENPOS_NO_TRAILER
GENPOS_TRAILER_OFF_AXLE = _ors_genpos_poster.GENPOS_TRAILER_OFF_AXLE
GENPOS_TRAILER_CENTERED_AXLE = _ors_genpos_poster.GENPOS_TRAILER_CENTERED_AXLE
class GENPOS_TRACK(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GENPOS_TRACK, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GENPOS_TRACK, name)
    __repr__ = _swig_repr
    __swig_setmethods__["trackMode"] = _ors_genpos_poster.GENPOS_TRACK_trackMode_set
    __swig_getmethods__["trackMode"] = _ors_genpos_poster.GENPOS_TRACK_trackMode_get
    if _newclass:trackMode = _swig_property(_ors_genpos_poster.GENPOS_TRACK_trackMode_get, _ors_genpos_poster.GENPOS_TRACK_trackMode_set)
    __swig_setmethods__["posterId"] = _ors_genpos_poster.GENPOS_TRACK_posterId_set
    __swig_getmethods__["posterId"] = _ors_genpos_poster.GENPOS_TRACK_posterId_get
    if _newclass:posterId = _swig_property(_ors_genpos_poster.GENPOS_TRACK_posterId_get, _ors_genpos_poster.GENPOS_TRACK_posterId_set)
    __swig_setmethods__["posterName"] = _ors_genpos_poster.GENPOS_TRACK_posterName_set
    __swig_getmethods__["posterName"] = _ors_genpos_poster.GENPOS_TRACK_posterName_get
    if _newclass:posterName = _swig_property(_ors_genpos_poster.GENPOS_TRACK_posterName_get, _ors_genpos_poster.GENPOS_TRACK_posterName_set)
    def __init__(self): 
        this = _ors_genpos_poster.new_GENPOS_TRACK()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ors_genpos_poster.delete_GENPOS_TRACK
    __del__ = lambda self : None;
GENPOS_TRACK_swigregister = _ors_genpos_poster.GENPOS_TRACK_swigregister
GENPOS_TRACK_swigregister(GENPOS_TRACK)

class GENPOS_TRCART_CONFIG(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GENPOS_TRCART_CONFIG, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GENPOS_TRCART_CONFIG, name)
    __repr__ = _swig_repr
    __swig_setmethods__["robot"] = _ors_genpos_poster.GENPOS_TRCART_CONFIG_robot_set
    __swig_getmethods__["robot"] = _ors_genpos_poster.GENPOS_TRCART_CONFIG_robot_get
    if _newclass:robot = _swig_property(_ors_genpos_poster.GENPOS_TRCART_CONFIG_robot_get, _ors_genpos_poster.GENPOS_TRCART_CONFIG_robot_set)
    __swig_setmethods__["phi"] = _ors_genpos_poster.GENPOS_TRCART_CONFIG_phi_set
    __swig_getmethods__["phi"] = _ors_genpos_poster.GENPOS_TRCART_CONFIG_phi_get
    if _newclass:phi = _swig_property(_ors_genpos_poster.GENPOS_TRCART_CONFIG_phi_get, _ors_genpos_poster.GENPOS_TRCART_CONFIG_phi_set)
    def __init__(self): 
        this = _ors_genpos_poster.new_GENPOS_TRCART_CONFIG()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ors_genpos_poster.delete_GENPOS_TRCART_CONFIG
    __del__ = lambda self : None;
GENPOS_TRCART_CONFIG_swigregister = _ors_genpos_poster.GENPOS_TRCART_CONFIG_swigregister
GENPOS_TRCART_CONFIG_swigregister(GENPOS_TRCART_CONFIG)

class GENPOS_TRCART_STATE(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GENPOS_TRCART_STATE, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GENPOS_TRCART_STATE, name)
    __repr__ = _swig_repr
    __swig_setmethods__["robot"] = _ors_genpos_poster.GENPOS_TRCART_STATE_robot_set
    __swig_getmethods__["robot"] = _ors_genpos_poster.GENPOS_TRCART_STATE_robot_get
    if _newclass:robot = _swig_property(_ors_genpos_poster.GENPOS_TRCART_STATE_robot_get, _ors_genpos_poster.GENPOS_TRCART_STATE_robot_set)
    __swig_setmethods__["phi"] = _ors_genpos_poster.GENPOS_TRCART_STATE_phi_set
    __swig_getmethods__["phi"] = _ors_genpos_poster.GENPOS_TRCART_STATE_phi_get
    if _newclass:phi = _swig_property(_ors_genpos_poster.GENPOS_TRCART_STATE_phi_get, _ors_genpos_poster.GENPOS_TRCART_STATE_phi_set)
    def __init__(self): 
        this = _ors_genpos_poster.new_GENPOS_TRCART_STATE()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ors_genpos_poster.delete_GENPOS_TRCART_STATE
    __del__ = lambda self : None;
GENPOS_TRCART_STATE_swigregister = _ors_genpos_poster.GENPOS_TRCART_STATE_swigregister
GENPOS_TRCART_STATE_swigregister(GENPOS_TRCART_STATE)

class GENPOS_TRCART_REF(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GENPOS_TRCART_REF, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GENPOS_TRCART_REF, name)
    __repr__ = _swig_repr
    __swig_setmethods__["robot"] = _ors_genpos_poster.GENPOS_TRCART_REF_robot_set
    __swig_getmethods__["robot"] = _ors_genpos_poster.GENPOS_TRCART_REF_robot_get
    if _newclass:robot = _swig_property(_ors_genpos_poster.GENPOS_TRCART_REF_robot_get, _ors_genpos_poster.GENPOS_TRCART_REF_robot_set)
    __swig_setmethods__["phi"] = _ors_genpos_poster.GENPOS_TRCART_REF_phi_set
    __swig_getmethods__["phi"] = _ors_genpos_poster.GENPOS_TRCART_REF_phi_get
    if _newclass:phi = _swig_property(_ors_genpos_poster.GENPOS_TRCART_REF_phi_get, _ors_genpos_poster.GENPOS_TRCART_REF_phi_set)
    def __init__(self): 
        this = _ors_genpos_poster.new_GENPOS_TRCART_REF()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ors_genpos_poster.delete_GENPOS_TRCART_REF
    __del__ = lambda self : None;
GENPOS_TRCART_REF_swigregister = _ors_genpos_poster.GENPOS_TRCART_REF_swigregister
GENPOS_TRCART_REF_swigregister(GENPOS_TRCART_REF)

class GENPOS_TRAILER_CONNECTION(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GENPOS_TRAILER_CONNECTION, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GENPOS_TRAILER_CONNECTION, name)
    __repr__ = _swig_repr
    __swig_setmethods__["l1"] = _ors_genpos_poster.GENPOS_TRAILER_CONNECTION_l1_set
    __swig_getmethods__["l1"] = _ors_genpos_poster.GENPOS_TRAILER_CONNECTION_l1_get
    if _newclass:l1 = _swig_property(_ors_genpos_poster.GENPOS_TRAILER_CONNECTION_l1_get, _ors_genpos_poster.GENPOS_TRAILER_CONNECTION_l1_set)
    __swig_setmethods__["l2"] = _ors_genpos_poster.GENPOS_TRAILER_CONNECTION_l2_set
    __swig_getmethods__["l2"] = _ors_genpos_poster.GENPOS_TRAILER_CONNECTION_l2_get
    if _newclass:l2 = _swig_property(_ors_genpos_poster.GENPOS_TRAILER_CONNECTION_l2_get, _ors_genpos_poster.GENPOS_TRAILER_CONNECTION_l2_set)
    __swig_setmethods__["maxAngle"] = _ors_genpos_poster.GENPOS_TRAILER_CONNECTION_maxAngle_set
    __swig_getmethods__["maxAngle"] = _ors_genpos_poster.GENPOS_TRAILER_CONNECTION_maxAngle_get
    if _newclass:maxAngle = _swig_property(_ors_genpos_poster.GENPOS_TRAILER_CONNECTION_maxAngle_get, _ors_genpos_poster.GENPOS_TRAILER_CONNECTION_maxAngle_set)
    def __init__(self): 
        this = _ors_genpos_poster.new_GENPOS_TRAILER_CONNECTION()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ors_genpos_poster.delete_GENPOS_TRAILER_CONNECTION
    __del__ = lambda self : None;
GENPOS_TRAILER_CONNECTION_swigregister = _ors_genpos_poster.GENPOS_TRAILER_CONNECTION_swigregister
GENPOS_TRAILER_CONNECTION_swigregister(GENPOS_TRAILER_CONNECTION)

class GENPOS_TRCART_GEO_PARAM(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GENPOS_TRCART_GEO_PARAM, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GENPOS_TRCART_GEO_PARAM, name)
    __repr__ = _swig_repr
    __swig_setmethods__["trailerConnection"] = _ors_genpos_poster.GENPOS_TRCART_GEO_PARAM_trailerConnection_set
    __swig_getmethods__["trailerConnection"] = _ors_genpos_poster.GENPOS_TRCART_GEO_PARAM_trailerConnection_get
    if _newclass:trailerConnection = _swig_property(_ors_genpos_poster.GENPOS_TRCART_GEO_PARAM_trailerConnection_get, _ors_genpos_poster.GENPOS_TRCART_GEO_PARAM_trailerConnection_set)
    __swig_setmethods__["sensorAngOffset"] = _ors_genpos_poster.GENPOS_TRCART_GEO_PARAM_sensorAngOffset_set
    __swig_getmethods__["sensorAngOffset"] = _ors_genpos_poster.GENPOS_TRCART_GEO_PARAM_sensorAngOffset_get
    if _newclass:sensorAngOffset = _swig_property(_ors_genpos_poster.GENPOS_TRCART_GEO_PARAM_sensorAngOffset_get, _ors_genpos_poster.GENPOS_TRCART_GEO_PARAM_sensorAngOffset_set)
    def __init__(self): 
        this = _ors_genpos_poster.new_GENPOS_TRCART_GEO_PARAM()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ors_genpos_poster.delete_GENPOS_TRCART_GEO_PARAM
    __del__ = lambda self : None;
GENPOS_TRCART_GEO_PARAM_swigregister = _ors_genpos_poster.GENPOS_TRCART_GEO_PARAM_swigregister
GENPOS_TRCART_GEO_PARAM_swigregister(GENPOS_TRCART_GEO_PARAM)



